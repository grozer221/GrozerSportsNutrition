# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: Int!
  name: RoleName!
  color: String!
  users: [User!]!
}

enum RoleName {
  admin
  moderator
  customer
}

type User {
  id: Int!
  confirmedEmail: Boolean!
  email: String!
  firstName: String!
  lastName: String!
  roles: [Role!]!
  orders: [Order!]!
}

type Order {
  id: Int!
  email: String!
  firstName: String!
  lastName: String!
  phoneNumber: String!
  address: String!
  shippingMethod: ShippingMethod!
  orderStatus: OrderStatus!
  user: User!
  userId: Float!
}

enum ShippingMethod {
  warehouse
  courier
}

enum OrderStatus {
  new
  picking
  delivering
  waitingForTheCustomerAtThePickUpPoint
  completed
}

type File {
  id: Int!
  originalName: String!
  mimetype: String!
  destination: String!
  fileName: String!
  filePath: String!
  fileImage: String!
  size: Int!
  products: [Product!]!
}

type Product {
  id: Int!
  isShown: Boolean!
  name: String!
  slug: String!
  quantity: Float!
  priceUAH: Float!
  description: String!
  characteristics: [Characteristic!]
  files: [File!]!
  categories: [Category!]
}

type Characteristic {
  name: String
  value: String
}

type Category {
  id: Int!
  isShown: Boolean!
  name: String!
  slug: String!
  description: String!
  products: [Product!]
}

type AuthResponse {
  user: User!
  accessToken: String!
}

type GetProductsResponse {
  products: [Product!]!
  total: Int!
}

type GetFilesResponse {
  files: [File!]!
  total: Int!
}

type GetCategoriesResponse {
  categories: [Category!]!
  total: Int!
}

type Page {
  id: Int!
  isShown: Boolean!
  name: String!
  slug: String!
  text: String!
  sorting: Int!
}

type GetOrdersResponse {
  orders: [Order!]!
  total: Int!
}

type Query {
  me: AuthResponse!
  getPage(slug: String!): Page!
  getPages: [Page!]!
  getProducts(getProductsInput: GetProductsInput!): GetProductsResponse!
  getProduct(slug: String!): Product!
  getProductByName(name: String!): Product!
}

input GetProductsInput {
  take: Int!
  skip: Int!
  likeName: String!
}

type Mutation {
  login(loginInput: LoginInput!): AuthResponse!
  register(registerInput: RegisterInput!): AuthResponse!
  confirmEmail(token: String!): AuthResponse!
  createOrder(createOrderInput: CreateOrderInput!): Order!
}

input LoginInput {
  email: String!
  password: String!
}

input RegisterInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

input CreateOrderInput {
  email: String!
  firstName: String!
  lastName: String!
  phoneNumber: String!
  address: String!
  shippingMethod: ShippingMethod!
}
